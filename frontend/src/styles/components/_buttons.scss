.standard-btn {
  border-radius: $border-radius-xs;
  background-color: $primary-color;
  color: black;
  padding: $spacing-xs $spacing-sm;
  transition: background-color $transition-instant;
  
  @media (hover: hover){
    &:hover {
      background-color: $secondary-color;
    }
  }
}

.delete-task-icon {
  @include flex(row, center, center);
  background-color: transparent;
  border: 1px solid color-fade($error-color, 0.5);
  padding: $spacing-sm;
  border-radius: $border-radius-sm;
  transition: border-color $transition-instant;

  svg {
    fill: $error-color;
    transition: fill $transition-instant;
  }

  @media (hover: hover){
    &:hover {
      border-color: $error-color;
      cursor: pointer;
    }
  }
}

.filter-button {
  @include flex(row, center, center);
  background-color: transparent;
  border: 1px solid gray;
  padding: $spacing-xs;
  border-radius: $border-radius-sm;
  transition: background-color $transition-instant;
  font-size: $font-size-sm;

  .filter-icon {
    margin-right: $spacing-xs;
  }

  svg {
    margin-right: $spacing-xs;
  }

  @media (hover: hover){
    &:hover {
      background-color: color-fade(gray, 0.15);
    }
  }
}

$filter-types: (
  dev: $dev-color,
  misc: $misc-color,
  pending: $pending-color,
  done: $done-color
);

@each $type, $color in $filter-types {
  .filter-button.#{$type} {
    border: 1px solid $color;
    transition: background-color $transition-instant;

    span {
      color: $color;
    }

    svg {
      color: $color;
      fill: $color;
      stroke: $color;
    }

    @media (hover: hover){
      &:hover {
        background-color: color-fade($color, 0.15);
      }
    }
  }

  .filter-button.#{$type}.active-filter-btn {
    background-color: color-fade($color, 0.15);
  }
}

.task-status-button {
  @include flex(initial, center, center);
  background-color: transparent;
  padding: 0 $spacing-xs;
  border-radius: $border-radius-xs;
  width: 20px;
  height: 20px;
  color: $gray;

  @media (hover: hover){
    &:hover {
      background-color: $gray-darker;
    }
  }
}

.done-status-btn {
  svg {
    fill: $done-color;
  }
}

#task-tag-editor {
  button {
    background-color: transparent;
    padding: $spacing-sm;
    border-radius: $border-radius-sm;
    @include flex(initial, center, center);
  }
}

$tag-btn-types: (
  dev: $dev-color,
  misc: $misc-color,
);

@each $type, $color in $tag-btn-types {
  #task-tag-editor button.#{$type} {
    border: 1px solid color-fade($color, 0.4);
    @include flex(initial, center, center);
    transition: border $transition-instant;

    svg {
      fill: $color;
      stroke: $color;
    }

    @media (hover: hover){
      &:hover {
        border: 1px solid $color;
      }
    }
  }

  #task-tag-editor button.#{$type}.selected {
    border: 1px solid $color;
  }
}

.filter-button.selected-sort {
    background-color: $gray-dark;
}

#delete-done-tasks-btn {
  @include flex(row, space-between, center);
  background-color: transparent;
  padding: $spacing-xs $spacing-sm;
  border: 1px solid $gray;
  border-radius: $border-radius-xs;
  color: $done-color;
  transition: background-color $transition-instant;
  text-wrap: nowrap;
  width: min-content;

  svg {
    margin-left: $spacing-sm;
    fill: $gray;
  }

  @media (hover: hover){
    &:hover {
      background-color: color-fade($gray, 0.15);
    }
  }
}

.todo-form-submit {
  flex: 1;
  background-color: transparent;
  border: 1px solid $primary-color;
  color: $primary-color;

  @media (hover: hover){
    &:hover {
      background-color: color-fade($primary-color, 0.15);
    }
  }
}