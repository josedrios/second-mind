.btn {
  @include flex(row, flex-start, center);
  width: min-content;
  height: 30px;
  padding-left: $spacing-sm;
  padding-right: $spacing-sm;
  border-radius: $border-radius-xs;
  font-weight: 400;
  transition: all $transition-instant ease;

  svg {
    margin-right: $spacing-xs;
  }

  &.squared {
    padding: $spacing-xs;
    svg {
      margin-right: 0;
    }
  }

  &.primary {
    color: var(--primary-color);
    background-color: var(--primary-200);
    border: 1px solid rgba(var(--primary-300-rgb), 0.25);
    
    &:hover {
      background-color: var(--primary-300);
      border: 1px solid rgba(var(--primary-400-rgb), 0.25);
    }

    svg {
      stroke: var(--primary-color);
    }
  }

  &.accent {
    color: var(--accent-color);
    background-color: var(--accent-200);
    border: 1px solid rgba(var(--accent-300-rgb), 0.25);

    &:hover {
      background-color: var(--accent-300);
      border: 1px solid rgba(var(--accent-400-rgb), 0.25);
    }

    svg {
      stroke: var(--accent-color);
    }
  }

  &.error {
    color: var(--error-color);
    background-color: var(--error-200);
    border: 1px solid rgba(var(--error-300-rgb), 0.25);

    &:hover {
      background-color: var(--error-300);
      border: 1px solid rgba(var(--error-400-rgb), 0.25);
    }

    svg {
      stroke: var(--error-color);
    }
  }

  &.gray {
    color: var(--text-color);
    background-color: transparent;
    border: 1px solid var(--gray-800);

    &:hover {
      background-color: var(--gray-700);
    }

    svg {
      stroke: var(--text-color);
    }
  }

  &.disabled {
    // add respective color schemes
    opacity: 0.5;
    pointer-events: none;
  }
}

.standard-btn {
  border-radius: $border-radius-xs;
  background-color: $text-color;
  color: black;
  padding: $spacing-xs $spacing-sm;
  transition: background-color $transition-instant;

  &:hover {
    background-color: $text-color;
  }
}

.standard-hollow-btn {
  border-radius: $border-radius-xs;
  background-color: transparent;
  border: 1px solid $text-color;
  color: $text-color;
  padding: $spacing-xs $spacing-sm;
  transition: background-color $transition-instant, color $transition-instant;

  &:hover {
    background-color: $text-color;
    color: $background-color !important;
  }
}

.delete-task-icon {
  @include flex(row, center, center);
  background-color: transparent;
  padding: $spacing-sm;
  border-radius: $border-radius-sm;
  transition: border-color $transition-instant;

  svg {
    fill: $error-color;
    transition: fill $transition-instant;
  }

  @media (hover: hover) {
    &:hover {
      border-color: $error-color;
      cursor: pointer;
    }
  }
}

.filter-button {
  @include flex(row, center, center);
  background-color: transparent;
  border: 1px solid gray;
  padding: $spacing-xs;
  border-radius: $border-radius-sm;
  transition: background-color $transition-instant;
  font-size: $font-size-sm;

  .filter-icon {
    margin-right: $spacing-xs;
  }

  svg {
    margin-right: $spacing-xs;
  }

  @media (hover: hover) {
    &:hover {
    }
  }
}

$filter-types: (
  dev: $dev-color,
  misc: $misc-color,
  pending: $pending-color,
  // done: $done-color,
);

@each $type, $color in $filter-types {
  .filter-button.#{$type} {
    border: 1px solid $color;
    transition: background-color $transition-instant;

    span {
      color: $color;
    }

    svg {
      color: $color;
      fill: $color;
      stroke: $color;
    }

    @media (hover: hover) {
      &:hover {
      }
    }
  }

  .filter-button.#{$type}.active-filter-btn {
  }
}

.task-status-button {
  @include flex(initial, center, center);
  background-color: transparent;
  padding: 0 $spacing-xs;
  border-radius: $border-radius-xs;
  width: 20px;
  height: 20px;
  color: gray;
  transition: background-color $transition-instant;

  &:hover {
    background-color: gray;
  }
}

.done-status-btn {
  svg {
    // fill: $done-color;
  }
}

#task-tag-editor {
  button {
    background-color: transparent;
    padding: $spacing-sm;
    border-radius: $border-radius-sm;
    @include flex(initial, center, center);
  }
}

$tag-btn-types: (
  dev: $dev-color,
  misc: $misc-color,
);

@each $type, $color in $tag-btn-types {
  #task-tag-editor button.#{$type} {
    @include flex(initial, center, center);
    transition: border $transition-instant;

    svg {
      fill: $color;
      stroke: $color;
    }

    @media (hover: hover) {
      &:hover {
        border: 1px solid $color;
      }
    }
  }

  #task-tag-editor button.#{$type}.selected {
    border: 1px solid $color;
  }
}

.filter-button.selected-sort {
  background-color: gray;
}

#delete-done-tasks-btn {
  @include flex(row, space-between, center);
  background-color: transparent;
  padding: $spacing-xs $spacing-sm;
  border-radius: $border-radius-sm;
  color: $error-color;
  border: 1px solid transparent;
  transition: background-color $transition-instant, border $transition-instant;
  text-wrap: nowrap;

  svg {
    margin-left: $spacing-sm;
    fill: $error-color;
  }

  @media (hover: hover) {
    &:hover {
      border: 1px solid $error-color;
    }
  }
}

.todo-form-submit {
  flex: 1;
  background-color: transparent;
  border: 1px solid $text-color;
  color: $text-color;

  @media (hover: hover) {
    &:hover {
    }
  }
}

.month-navigation-buttons,
.year-navigation-buttons {
  background-color: transparent;
  padding: $spacing-xs $spacing-sm;
  border-radius: $border-radius-xs;
  transition: background-color $transition-instant;
  @include flex(row, center, center);

  svg {
    fill: gray;
    transition: fill $transition-instant;
  }

  &:hover {

    svg {
      fill: $text-color;
    }
  }
}

.calendar-date-button {
  background-color: transparent;
  @include flex(row, center, center);
  padding: $spacing-sm 0;
  color: gray;
  border-radius: $border-radius-xs;
  transition: background-color $transition-instant;

  &:hover {
  }
}

.null-days {
  background-color: transparent;

  &:hover {
    background-color: transparent;
  }
}

.contains-events {
  // color: $done-color !important;
}

.current-day {
  color: $error-color !important;
}

.past-day {
  color: $dev-color !important;
}

.calendar-event-button {
  background-color: transparent;
  font-size: 25px;
  @include flex(row, center, center);

  svg {
    padding: 0;
    fill: gray;
    transition: fill $transition-instant;
  }

  &:hover {
    svg {
      fill: $text-color;
    }
  }
}

.event-container {
  border-radius: $border-radius-xs;
  background-color: transparent;
  color: $text-color;
  width: 100%;
  @include flex(row, space-between);
  padding: $spacing-sm;
  text-align: left;
  transition: background-color $transition-instant, color $transition-instant;

  &:hover {
    color: $text-color;
  }
}

.calendar-overlay-close-button {
  @include flex(row, center, center);
  border-radius: $border-radius-c;
  background-color: transparent;
  font-size: 30px;
  transition: border $transition-instant;
  border: 1px solid transparent;

  &:hover {
    border: 1px solid $text-color;
  }
}

.reoccurring-option-button {
  padding: $spacing-sm;
  background-color: transparent;
  border-radius: $border-radius-xs;
  border: 1px solid $text-color;
  transition: background-color $transition-instant;

  &:hover {
  }
}

.reoccurring-chosen-option {
}

#task-link-toggle-container {
  height: 20px;
  width: 35px;
  background-color: gray;
  border-radius: $border-radius-c;
  position: relative;
  transition: background-color, $transition-instant;
}

#task-link-toggler {
  position: absolute;
  @include box(15px);
  background-color: $text-color;
  border-radius: $border-radius-c;
  top: 2px;
  left: 2px;
  transition: transform $transition-instant ease;
}

.right-toggle {
  transform: translateX(14px);
}

.left-toggle {
  transform: translateX(0);
}

.color-toggle {
}

#finance-increment-frame button {
  background-color: transparent;
  padding: $spacing-xs $spacing-sm;
  transition: background-color $transition-instant;

  &:hover {
  }
}

#finance-increment-frame button.active {
}

.finance-time-frame-button {
  @include flex(row, center, center);
  border-radius: $border-radius-xs;
  background-color: gray;
  padding: $spacing-xs $spacing-sm;
  transition: background-color $transition-instant;

  &:hover {
    background-color: gray;
  }
}

$filter-types: (
  need: $dev-color,
  fun: $misc-color,
  sub: $pending-color,
  // save: $done-color,
);

@each $type, $color in $filter-types {
  .finance-form-category-button.#{$type} {
    @include flex(row, center, center);
    border-radius: $border-radius-sm;
    padding: $spacing-sm;
    aspect-ratio: 1/1;
    border: 1px solid $color;
    background-color: transparent;
    transition: background-color $transition-instant;

    span {
      color: $color;
    }

    svg {
      color: $color;
      fill: $color;
      stroke: $color;
    }

    &:hover {
    }
  }

  .finance-form-category-button.#{$type}.active {
  }
}

#finance-form-payment-type button {
  height: 100%;
  background-color: transparent;
  color: gray;
  transition: color $transition-instant;
}

#finance-form-payment-type button.active {
  color: $text-color;
}

#mind-search-container {
  button {
    @include flex(row, center, center);
      width: 30px;
      background-color: transparent;
      font-size: 18px;

      &:hover {
        background-color: $background-color;
      }
  }
}

#mind-filter-sorts {
  @include flex(row);
  gap: $spacing-sm;
  margin: 0 auto;

  .filter-sort-btn {
    padding: $spacing-xs;
    background-color: transparent;
    border: 1px solid $text-color;
    border-radius: $border-radius-sm;
  }
}

#create-tree-btn {
  aspect-ratio: 1/1;
  height: 34px;
  border-radius: $border-radius-sm;
  background-color: transparent;
  border: 1px solid $text-color;
  @include flex(row, center, center);
  font-size: 19px; 
}